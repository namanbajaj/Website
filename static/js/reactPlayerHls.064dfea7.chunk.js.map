{"version":3,"file":"static/js/reactPlayerHls.064dfea7.chunk.js","mappings":"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","sources":["../node_modules/hls-video-element/dist/hls-video-element.js","../node_modules/hls-video-element/dist/react.js"],"sourcesContent":["import { CustomVideoElement } from \"custom-media-element\";\nimport { MediaTracksMixin } from \"media-tracks\";\nimport Hls from \"hls.js/dist/hls.mjs\";\nconst HlsVideoMixin = (superclass) => {\n  return class HlsVideo extends superclass {\n    static shadowRootOptions = { ...superclass.shadowRootOptions };\n    static getTemplateHTML = (attrs, props = {}) => {\n      const { src, ...rest } = attrs;\n      return `\n        <script type=\"application/json\" id=\"config\">\n          ${JSON.stringify(props.config || {})}\n        </script>\n        ${superclass.getTemplateHTML(rest)}\n      `;\n    };\n    #airplaySourceEl = null;\n    #config = null;\n    constructor() {\n      super();\n      this.#upgradeProperty(\"config\");\n    }\n    get config() {\n      return this.#config;\n    }\n    set config(value) {\n      this.#config = value;\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (attrName !== \"src\") {\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n      }\n      if (attrName === \"src\" && oldValue != newValue) {\n        this.load();\n      }\n    }\n    #destroy() {\n      var _a, _b;\n      (_a = this.#airplaySourceEl) == null ? void 0 : _a.remove();\n      (_b = this.nativeEl) == null ? void 0 : _b.removeEventListener(\n        \"webkitcurrentplaybacktargetiswirelesschanged\",\n        this.#toggleHlsLoad\n      );\n      if (this.api) {\n        this.api.detachMedia();\n        this.api.destroy();\n        this.api = null;\n      }\n    }\n    async load() {\n      var _a, _b;\n      const isFirstLoad = !this.api;\n      this.#destroy();\n      if (!this.src) {\n        return;\n      }\n      if (isFirstLoad && !this.#config) {\n        this.#config = JSON.parse(((_a = this.shadowRoot.getElementById(\"config\")) == null ? void 0 : _a.textContent) || \"{}\");\n      }\n      if (Hls.isSupported()) {\n        this.api = new Hls({\n          // Mimic the media element with an Infinity duration for live streams.\n          liveDurationInfinity: true,\n          // Disable auto quality level/fragment loading.\n          autoStartLoad: false,\n          // Custom configuration for hls.js.\n          ...this.config\n        });\n        await Promise.resolve();\n        this.api.loadSource(this.src);\n        this.api.attachMedia(this.nativeEl);\n        switch (this.nativeEl.preload) {\n          case \"none\": {\n            const loadSourceOnPlay = () => this.api.startLoad();\n            this.nativeEl.addEventListener(\"play\", loadSourceOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", loadSourceOnPlay);\n            });\n            break;\n          }\n          case \"metadata\": {\n            const originalLength = this.api.config.maxBufferLength;\n            const originalSize = this.api.config.maxBufferSize;\n            this.api.config.maxBufferLength = 1;\n            this.api.config.maxBufferSize = 1;\n            const increaseBufferOnPlay = () => {\n              this.api.config.maxBufferLength = originalLength;\n              this.api.config.maxBufferSize = originalSize;\n            };\n            this.nativeEl.addEventListener(\"play\", increaseBufferOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", increaseBufferOnPlay);\n            });\n            this.api.startLoad();\n            break;\n          }\n          default:\n            this.api.startLoad();\n        }\n        if (this.nativeEl.webkitCurrentPlaybackTargetIsWireless) {\n          this.api.stopLoad();\n        }\n        this.nativeEl.addEventListener(\n          \"webkitcurrentplaybacktargetiswirelesschanged\",\n          this.#toggleHlsLoad\n        );\n        this.#airplaySourceEl = document.createElement(\"source\");\n        this.#airplaySourceEl.setAttribute(\"type\", \"application/x-mpegURL\");\n        this.#airplaySourceEl.setAttribute(\"src\", this.src);\n        this.nativeEl.disableRemotePlayback = false;\n        this.nativeEl.append(this.#airplaySourceEl);\n        const levelIdMap = /* @__PURE__ */ new WeakMap();\n        this.api.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n          if (this.nativeEl.autoplay && this.nativeEl.paused) {\n            this.nativeEl.play().catch((err) => {\n              console.warn(\"Autoplay failed:\", err);\n            });\n          }\n          removeAllMediaTracks();\n          let videoTrack = this.videoTracks.getTrackById(\"main\");\n          if (!videoTrack) {\n            videoTrack = this.addVideoTrack(\"main\");\n            videoTrack.id = \"main\";\n            videoTrack.selected = true;\n          }\n          for (const [id, level] of data.levels.entries()) {\n            const videoRendition = videoTrack.addRendition(\n              level.url[0],\n              level.width,\n              level.height,\n              level.videoCodec,\n              level.bitrate\n            );\n            levelIdMap.set(level, `${id}`);\n            videoRendition.id = `${id}`;\n          }\n          for (let [id, a] of data.audioTracks.entries()) {\n            const kind = a.default ? \"main\" : \"alternative\";\n            const audioTrack = this.addAudioTrack(kind, a.name, a.lang);\n            audioTrack.id = `${id}`;\n            if (a.default) {\n              audioTrack.enabled = true;\n            }\n          }\n        });\n        this.audioTracks.addEventListener(\"change\", () => {\n          var _a2;\n          const audioTrackId = +((_a2 = [...this.audioTracks].find((t) => t.enabled)) == null ? void 0 : _a2.id);\n          const availableIds = this.api.audioTracks.map((t) => t.id);\n          if (audioTrackId != this.api.audioTrack && availableIds.includes(audioTrackId)) {\n            this.api.audioTrack = audioTrackId;\n          }\n        });\n        this.api.on(Hls.Events.LEVELS_UPDATED, (event, data) => {\n          const videoTrack = this.videoTracks[this.videoTracks.selectedIndex ?? 0];\n          if (!videoTrack) return;\n          const levelIds = data.levels.map((l) => levelIdMap.get(l));\n          for (const rendition of this.videoRenditions) {\n            if (rendition.id && !levelIds.includes(rendition.id)) {\n              videoTrack.removeRendition(rendition);\n            }\n          }\n        });\n        const switchRendition = (event) => {\n          const level = event.target.selectedIndex;\n          if (level != this.api.nextLevel) {\n            this.api.nextLevel = level;\n          }\n        };\n        (_b = this.videoRenditions) == null ? void 0 : _b.addEventListener(\"change\", switchRendition);\n        const removeAllMediaTracks = () => {\n          for (const videoTrack of this.videoTracks) {\n            this.removeVideoTrack(videoTrack);\n          }\n          for (const audioTrack of this.audioTracks) {\n            this.removeAudioTrack(audioTrack);\n          }\n        };\n        this.api.once(Hls.Events.DESTROYING, removeAllMediaTracks);\n        return;\n      }\n      await Promise.resolve();\n      if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        this.nativeEl.src = this.src;\n      }\n    }\n    #toggleHlsLoad = () => {\n      var _a, _b, _c;\n      if ((_a = this.nativeEl) == null ? void 0 : _a.webkitCurrentPlaybackTargetIsWireless) {\n        (_b = this.api) == null ? void 0 : _b.stopLoad();\n      } else {\n        (_c = this.api) == null ? void 0 : _c.startLoad();\n      }\n    };\n    // This is a pattern to update property values that are set before\n    // the custom element is upgraded.\n    // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n  };\n};\nconst HlsVideoElement = HlsVideoMixin(MediaTracksMixin(CustomVideoElement));\nif (globalThis.customElements && !globalThis.customElements.get(\"hls-video\")) {\n  globalThis.customElements.define(\"hls-video\", HlsVideoElement);\n}\nvar hls_video_element_default = HlsVideoElement;\nexport {\n  Hls,\n  HlsVideoElement,\n  HlsVideoMixin,\n  hls_video_element_default as default\n};\n","\"use client\";\n\n// dist/react.ts\nimport React from \"react\";\nimport CustomMediaElement from \"./hls-video-element.js\";\n\n// ../../node_modules/ce-la-react/dist/ce-la-react.js\nvar reservedReactProps = /* @__PURE__ */ new Set([\n  \"style\",\n  \"children\",\n  \"ref\",\n  \"key\",\n  \"suppressContentEditableWarning\",\n  \"suppressHydrationWarning\",\n  \"dangerouslySetInnerHTML\"\n]);\nvar reactPropToAttrNameMap = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nfunction defaultToAttributeName(propName) {\n  return propName.toLowerCase();\n}\nfunction defaultToAttributeValue(propValue) {\n  if (typeof propValue === \"boolean\") return propValue ? \"\" : void 0;\n  if (typeof propValue === \"function\") return void 0;\n  if (typeof propValue === \"object\" && propValue !== null) return void 0;\n  return propValue;\n}\nfunction createComponent({\n  react: React2,\n  tagName,\n  elementClass,\n  events,\n  displayName,\n  defaultProps,\n  toAttributeName = defaultToAttributeName,\n  toAttributeValue = defaultToAttributeValue\n}) {\n  const IS_REACT_19_OR_NEWER = Number.parseInt(React2.version) >= 19;\n  const ReactComponent = React2.forwardRef((props, ref) => {\n    var _a, _b;\n    const elementRef = React2.useRef(null);\n    const prevElemPropsRef = React2.useRef(/* @__PURE__ */ new Map());\n    const eventProps = {};\n    const attrs = {};\n    const reactProps = {};\n    const elementProps = {};\n    for (const [k, v] of Object.entries(props)) {\n      if (reservedReactProps.has(k)) {\n        reactProps[k] = v;\n        continue;\n      }\n      const attrName = toAttributeName(reactPropToAttrNameMap[k] ?? k);\n      if (k in elementClass.prototype && !(k in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) && !((_b = elementClass.observedAttributes) == null ? void 0 : _b.some((attr) => attr === attrName))) {\n        elementProps[k] = v;\n        continue;\n      }\n      if (k.startsWith(\"on\")) {\n        eventProps[k] = v;\n        continue;\n      }\n      const attrValue = toAttributeValue(v);\n      if (attrName && attrValue != null) {\n        attrs[attrName] = String(attrValue);\n        if (!IS_REACT_19_OR_NEWER) {\n          reactProps[attrName] = attrValue;\n        }\n      }\n      if (attrName && IS_REACT_19_OR_NEWER) {\n        const attrValueFromDefault = defaultToAttributeValue(v);\n        if (attrValue !== attrValueFromDefault) {\n          reactProps[attrName] = attrValue;\n        } else {\n          reactProps[attrName] = v;\n        }\n      }\n    }\n    if (typeof window !== \"undefined\") {\n      for (const propName in eventProps) {\n        const callback = eventProps[propName];\n        const useCapture = propName.endsWith(\"Capture\");\n        const eventName = ((events == null ? void 0 : events[propName]) ?? propName.slice(2).toLowerCase()).slice(\n          0,\n          useCapture ? -7 : void 0\n        );\n        React2.useLayoutEffect(() => {\n          const eventTarget = elementRef == null ? void 0 : elementRef.current;\n          if (!eventTarget || typeof callback !== \"function\") return;\n          eventTarget.addEventListener(eventName, callback, useCapture);\n          return () => {\n            eventTarget.removeEventListener(eventName, callback, useCapture);\n          };\n        }, [elementRef == null ? void 0 : elementRef.current, callback]);\n      }\n      React2.useLayoutEffect(() => {\n        if (elementRef.current === null) return;\n        const newElemProps = /* @__PURE__ */ new Map();\n        for (const key in elementProps) {\n          setProperty(elementRef.current, key, elementProps[key]);\n          prevElemPropsRef.current.delete(key);\n          newElemProps.set(key, elementProps[key]);\n        }\n        for (const [key, _value] of prevElemPropsRef.current) {\n          setProperty(elementRef.current, key, void 0);\n        }\n        prevElemPropsRef.current = newElemProps;\n      });\n    }\n    if (typeof window === \"undefined\" && (elementClass == null ? void 0 : elementClass.getTemplateHTML) && (elementClass == null ? void 0 : elementClass.shadowRootOptions)) {\n      const { mode, delegatesFocus } = elementClass.shadowRootOptions;\n      const templateShadowRoot = React2.createElement(\"template\", {\n        shadowrootmode: mode,\n        shadowrootdelegatesfocus: delegatesFocus,\n        dangerouslySetInnerHTML: {\n          __html: elementClass.getTemplateHTML(attrs, props)\n        }\n      });\n      reactProps.children = [templateShadowRoot, reactProps.children];\n    }\n    return React2.createElement(tagName, {\n      ...defaultProps,\n      ...reactProps,\n      ref: React2.useCallback(\n        (node) => {\n          elementRef.current = node;\n          if (typeof ref === \"function\") {\n            ref(node);\n          } else if (ref !== null) {\n            ref.current = node;\n          }\n        },\n        [ref]\n      )\n    });\n  });\n  ReactComponent.displayName = displayName ?? elementClass.name;\n  return ReactComponent;\n}\nfunction setProperty(node, name, value) {\n  var _a;\n  node[name] = value;\n  if (value == null && name in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) {\n    node.removeAttribute(name);\n  }\n}\n\n// dist/react.ts\nvar react_default = createComponent({\n  react: React,\n  tagName: \"hls-video\",\n  elementClass: CustomMediaElement\n});\nexport {\n  react_default as default\n};\n/*! Bundled license information:\n\nce-la-react/dist/ce-la-react.js:\n  (**\n   * @license\n   * Copyright 2018 Google LLC\n   * SPDX-License-Identifier: BSD-3-Clause\n   *\n   * Modified version of `@lit/react` for vanilla custom elements with support for SSR.\n   *)\n*/\n"],"names":["HlsVideoElement","superclass","MediaTracksMixin","CustomVideoElement","static","shadowRootOptions","attrs","props","arguments","length","undefined","src","rest","JSON","stringify","config","getTemplateHTML","constructor","super","this","value","attributeChangedCallback","attrName","oldValue","newValue","load","_a","_b","remove","nativeEl","removeEventListener","api","detachMedia","destroy","isFirstLoad","parse","shadowRoot","getElementById","textContent","Hls","liveDurationInfinity","autoStartLoad","Promise","resolve","loadSource","attachMedia","preload","loadSourceOnPlay","startLoad","addEventListener","once","on","DESTROYING","originalLength","maxBufferLength","originalSize","maxBufferSize","increaseBufferOnPlay","webkitCurrentPlaybackTargetIsWireless","stopLoad","document","createElement","setAttribute","disableRemotePlayback","append","levelIdMap","WeakMap","MANIFEST_PARSED","event","data","autoplay","paused","play","catch","err","console","warn","removeAllMediaTracks","videoTrack","videoTracks","getTrackById","addVideoTrack","id","selected","level","levels","entries","videoRendition","addRendition","url","width","height","videoCodec","bitrate","set","a","audioTracks","kind","default","audioTrack","addAudioTrack","name","lang","enabled","_a2","audioTrackId","find","t","availableIds","map","includes","LEVELS_UPDATED","selectedIndex","levelIds","l","get","rendition","videoRenditions","removeRendition","switchRendition","target","nextLevel","removeVideoTrack","removeAudioTrack","canPlayType","#toggleHlsLoad","_c","prop","Object","prototype","hasOwnProperty","call","globalThis","customElements","define","hls_video_element_default","reservedReactProps","Set","reactPropToAttrNameMap","className","htmlFor","defaultToAttributeName","propName","toLowerCase","defaultToAttributeValue","propValue","setProperty","node","HTMLElement","removeAttribute","react_default","_ref","react","React2","tagName","elementClass","events","displayName","defaultProps","toAttributeName","toAttributeValue","IS_REACT_19_OR_NEWER","Number","parseInt","version","ReactComponent","forwardRef","ref","elementRef","useRef","prevElemPropsRef","Map","eventProps","reactProps","elementProps","k","v","has","observedAttributes","some","attr","startsWith","attrValue","String","attrValueFromDefault","window","callback","useCapture","endsWith","eventName","slice","useLayoutEffect","eventTarget","current","newElemProps","key","delete","_value","mode","delegatesFocus","templateShadowRoot","shadowrootmode","shadowrootdelegatesfocus","dangerouslySetInnerHTML","__html","children","useCallback","createComponent","React","CustomMediaElement"],"sourceRoot":""}